<?xml version="1.0" encoding="utf-8"?>
<!--
     ////////////////////////////////////////////////////////////////////////////////
     //
     // Copyright (c) 2010 ESRI
     //
     // All rights reserved under the copyright laws of the United States.
     // You may freely redistribute and use this software, with or
     // without modification, provided you include the original copyright
     // and use restrictions.  See use restrictions in the file:
     // <install location>/License.txt
     //
     ////////////////////////////////////////////////////////////////////////////////
-->
<viewer:BaseWidget xmlns:fx="http://ns.adobe.com/mxml/2009"
                   xmlns:s="library://ns.adobe.com/flex/spark"
                   xmlns:viewer="com.esri.viewer.*"
                   xmlns:Navigation="widgets.Navigation.*"
                   initialize="basewidget_initializeHandler(event)"
                   widgetConfigLoaded="init()">
    <viewer:states>
        <s:State name="out"/>
        <s:State name="over"/>
    </viewer:states>
    <fx:Declarations>
        <s:Fade id="fadeOver"
                alphaTo="1"
                effectEnd="navtool.alpha = 1"/>
        <s:Fade id="fadeOut"
                alphaTo="{getStyle('contentBackgroundAlpha') / 1.25}"
                effectEnd="navtool.alpha = getStyle('contentBackgroundAlpha') / 1.25"/>
    </fx:Declarations>
    <fx:Script>
        <![CDATA[
			import com.esri.ags.events.ExtentEvent;
			import com.esri.ags.events.ZoomEvent;
			import com.esri.ags.geometry.Extent;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.layers.Layer;
			import com.esri.viewer.AppEvent;
			import com.esri.viewer.ViewerContainer;
			
			import mx.events.FlexEvent;

            private var lastSelectedIndex:int; // selectedIndex for buttonbar containing pan, zoom-in and zoom-out

            protected function basewidget_initializeHandler(event:FlexEvent):void
            {
                ViewerContainer.addEventListener(AppEvent.DATA_PUBLISH, sharedDataUpdated);
            }
			
			//设置底图的可操作范围
			private var xmin:Number;
			private var xmax:Number;
			private var ymin:Number;
			private var ymax:Number;
			private var centerX:Number;
			private var centerY:Number;
			private var level:Number;
			private var visiblelevel:Number;
            private function init():void
            {
                if (configXML)
                {
                    navtool.panwheelItem = new NavToolItem("PanWheel", "", configXML.panwheel.@visible == 'true');
                    navtool.zoomFullextItem = new NavToolItem(configXML.panwheel.@fullextlabel || getDefaultString("fullExtentLabel"), configXML.panwheel.@fullexticon, true);
                    navtool.pandownItem = new NavToolItem(configXML.panwheel.@pandownlabel || getDefaultString("panDownLabel"), "", true);
                    navtool.panleftItem = new NavToolItem(configXML.panwheel.@panleftlabel || getDefaultString("panLeftLabel"), "", true);
                    navtool.panrightItem = new NavToolItem(configXML.panwheel.@panrightlabel || getDefaultString("panRightLabel"), "", true);
                    navtool.panupItem = new NavToolItem(configXML.panwheel.@panuplabel || getDefaultString("panUpLabel"), "", true);
                    navtool.prevextItem = new NavToolItem(configXML.prevextbutton.@label || getDefaultString("previousExtentLabel"), "", configXML.prevextbutton.@visible == 'true');
                    navtool.nextextItem = new NavToolItem(configXML.nextextbutton.@label || getDefaultString("nextExtentLabel"), "", configXML.nextextbutton.@visible == 'true');
                    navtool.panItem = new NavToolItem(configXML.panbutton.@label || getDefaultString("panLabel"), configXML.panbutton.@icon, configXML.panbutton.@visible == 'true');
                    navtool.zoominItem = new NavToolItem(configXML.zoominbutton.@label || getDefaultString("zoomInLabel"), configXML.zoominbutton.@icon, configXML.zoominbutton.@visible == 'true');
                    navtool.zoomoutItem = new NavToolItem(configXML.zoomoutbutton.@label || getDefaultString("zoomOutLabel"), configXML.zoomoutbutton.@icon, configXML.zoomoutbutton.@visible == 'true');
                    navtool.initButtonBar();
					//设置地图初始化范围,level是加载上来的级数从0开始
					centerX = Number(configXML.initialextent.@centerX) || 13000000;
					centerY = Number(configXML.initialextent.@centerY) || 2500000;
					level = Number(configXML.initialextent.@level) || 4;
					map.level = level;
					map.centerAt(new MapPoint(centerX,centerY));
					//设置地图范围，用户只能在这个范围内操作
					var extentEnabled:Boolean = configXML.extent.@enabled==true?true:false;//一定要==true，否则都是ture
					if(extentEnabled)
					{
						xmin = Number(configXML.extent.@xmin) || Number.MIN_VALUE;
						xmax = Number(configXML.extent.@xmax) || Number.MAX_VALUE;
						ymin = Number(configXML.extent.@ymin) || Number.MIN_VALUE;
						ymax = Number(configXML.extent.@ymax) || Number.MAX_VALUE;
						map.addEventListener(ExtentEvent.EXTENT_CHANGE,extent_Change_Function);
						
					}
					//监听地图放大缩小事件，动态改变站点图标的可视
					var levelEnabled:Boolean = configXML.sitevisiblelevel.@enabled==true?true:false;//一定要==true，否则都是ture
					if(levelEnabled)
					{
						visiblelevel = Number(configXML.sitevisiblelevel.@level) || 3;
						map.addEventListener(ZoomEvent.ZOOM_END,zoom_End_Funtion);
					}
                }
            }

			//记录每次改变extent的范围，若超出范围，通过改变extent的x或y的值，将其移回范围内
			protected function extent_Change_Function(event:ExtentEvent):void
			{
				var extentXmin:Number = map.extent.xmin;
				var extentXmax:Number = map.extent.xmax;
				var extentYmin:Number = map.extent.ymin;
				var extentYmax:Number = map.extent.ymax;
				var out:Boolean = false;

				//解决double赋值不准确问题
				var little:Number = 100;
				
				//如果当前范围的xmin和xmax都超出范围，或者ymin和ymax都超出范围，则底图的数据级数+1
				//以解决当级数小于最小级数时，页面一直来回移动的问题
				if((extentXmin<=xmin+little && extentXmax>=xmax-little)||(extentYmin<=ymin+little&&extentYmax>=ymax-little))
				{
					map.level++;
					return;
				}
				
				if(extentXmin<xmin)
				{
					extentXmax = extentXmax - extentXmin + xmin +little;
					extentXmin = xmin +little;
					out = true;
				}
				else if(extentXmax>xmax)
				{
					extentXmin = extentXmin - extentXmax + xmax -little;
					extentXmax = xmax -little;
					out = true;
				}
				if(extentYmin<ymin)
				{
					extentYmax = extentYmax - extentYmin + ymin +little;
					extentYmin = ymin +little;
					out = true;
				}
				else if(extentYmax>ymax)
				{
					extentYmin = extentYmin - extentYmax + ymax -little;
					extentYmax = ymax -little;
					out = true;
				}
				if(out == true)
				{
					var extent:Extent = new Extent(extentXmin,extentYmin,extentXmax,extentYmax);
					map.extent = extent;
				}
			}
			//监听地图放大缩小事件，动态改变站点图标的可视
			protected function zoom_End_Funtion(event:ZoomEvent):void
			{
				for each(var layer:Layer in map.layers)
				{
					if(layer.id == "SiteFeatures")
					{
						if(map.level<visiblelevel)
						{
							layer.visible = false;
						}
						else
						{
							layer.visible = true;
						}
					}
				}
			}
            private function sharedDataUpdated(event:AppEvent):void
            {
                var data:Object = event.data;

                if (data.key == "Edit_Widget") // disable buttonbar when edit widget is opened
                {
                    if (data.collection[0])
                    {
                        map.cursorManager.removeAllCursors(); // make sure all custom cursors are removed
                        lastSelectedIndex = navtool.btnBar.selectedIndex;
                        navtool.btnBar.selectedIndex = 0;
                        navtool.btnBar.enabled = false;
                    }
                    else
                    {
                        navtool.btnBar.selectedIndex = lastSelectedIndex;
                        navtool.btnBar.enabled = true;
                    }
                }
            }
        ]]>
    </fx:Script>
    <Navigation:Navigation id="navtool"
                           alpha="{getStyle('contentBackgroundAlpha') / 2}"
                           map="{map}"
                           rollOut="fadeOut.play([navtool])"
                           rollOver="fadeOver.play([navtool])"/>
</viewer:BaseWidget>
